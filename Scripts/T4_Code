* ================== P2.1 =================
clear all
set more off

* 1) Importa y normaliza nombres (todo minúsculas y válidos en Stata)
import excel "C:\Users\P e r s o n a l\Downloads\Taller4C-main\Taller4C-main\Data\Raw\juego20252 haciendo econ.xlsx", sheet("Hoja1") firstrow case(lower) clear
rename, validname

* 2) Ver nombres reales (opcional)
describe

* 3) Detecta columnas por palabras clave (independiente del formato exacto)
*    Ajusta si tu describe muestra algo distinto
local var_period ""
local var_player ""
local var_contrib ""
local var_payoff ""

foreach v of varlist _all {
    local nm : variable label `v'
    if ("`nm'"=="") local nm "`v'"

    local low = lower("`v'")
    if strpos("`low'","round")        & "`var_period'"==""  local var_period `v'
    if strpos("`low'","team")         & "`var_player'"==""  local var_player `v'
    if strpos("`low'","contrib")      & "`var_contrib'"=="" local var_contrib `v'
    if strpos("`low'","pay")          & "`var_payoff'"==""  local var_payoff `v'
}

* Fallback si no encontró por keywords: toma las 4 primeras columnas
capture confirm variable `var_period'
if _rc {
    ds
    local c1 : word 1 of `r(varlist)'
    local c2 : word 2 of `r(varlist)'
    local c3 : word 3 of `r(varlist)'
    local c4 : word 4 of `r(varlist)'
    local var_period  `c1'
    local var_player  `c2'
    local var_contrib `c3'
    local var_payoff  `c4'
}

* 4) Renombra a nombres limpios que usaremos en el resto del flujo
rename `var_period'  periodo
rename `var_player'  jugador
rename `var_contrib' contribucion
capture confirm variable `var_payoff'
if !_rc rename `var_payoff' payoff

* 5) Rellena períodos vacíos y convierte a numéricos
replace periodo = periodo[_n-1] if missing(periodo)
destring periodo contribucion, replace force

* 6) Calcula promedio por período
preserve
collapse (mean) contribucion, by(periodo)

* 7) Gráfico (todo en una sola línea para evitar errores de ///)
twoway line contribucion periodo, xtitle("Período (1-10)") ytitle("Contribución promedio") title("Juego propio: contribución promedio por período") xlabel(1(1)10) lwidth(medthick) msymbol(circle)

graph export "p21_linea_propios.png", replace
restore

* (Opcional) Exporta tabla de promedios
preserve
collapse (mean) contribucion, by(periodo)
export delimited using "p21_promedios_por_periodo.csv", replace
restore









































****************************************************
* P2.3.1 – Simulación de lanzamientos de moneda
****************************************************

clear all
set more off

* 12 lanzamientos (6 + 6)
set obs 12
gen id = _n

* 0 = sello, 1 = cara
set seed 12345
gen moneda = (runiform() < 0.5)

* Bloques: 1 = primeros 6, 2 = segundos 6
gen grupo = cond(id <= 6, 1, 2)

* Secuencia de lanzamientos
list id grupo moneda, sepby(grupo)

* Contar caras por bloque (y no perder la secuencia original)
preserve
collapse (sum) caras = moneda, by(grupo)
sort grupo
list grupo caras

* Extraer conteos y reportar
scalar c1 = caras[1]
scalar c2 = caras[2]
display "Caras en el primer bloque (6 lanzamientos): " c1
display "Caras en el segundo bloque (6 lanzamientos): " c2

* Comparación automática SIN partir líneas
if (c1 == c2) {
    display "Los dos bloques tienen el MISMO número de caras."
}
else {
    display "Los bloques tienen un número de caras DISTINTO."
}
restore


****************************************************
* P2.3.2 – t-test Periodo 1 (con vs sin castigo)
* Datos: Fig. 3 (sin) y Fig. 2A (con) – Periodo 1
****************************************************

clear all
set more off

* Cargar datos del Periodo 1 (16 ciudades por tratamiento)
input contrib tratamiento
* --- SIN CASTIGO (tratamiento = 0) ---
* Copenhagen
14.1029 0
* Dnipropetrovs'k
10.9545 0
* Minsk
12.7941 0
* St. Gallen
13.6875 0
* Muscat
9.5385 0
* Samara
10.8421 0
* Zurich
11.0833 0
* Boston
12.9643 0
* Bonn
10.8500 0
* Chengdu
10.0000 0
* Seoul
8.2500 0
* Riyadh
7.9583 0
* Nottingham
10.9286 0
* Athens
8.1364 0
* Istanbul
8.9375 0
* Melbourne
8.2250 0

* --- CON CASTIGO (tratamiento = 1) ---
* Copenhagen
15.4118 1
* Dnipropetrovs'k
9.4773 1
* Minsk
11.7500 1
* St. Gallen
15.0417 1
* Muscat
9.2115 1
* Samara
10.7632 1
* Zurich
13.2283 1
* Boston
16.0179 1
* Bonn
12.0500 1
* Chengdu
9.8958 1
* Seoul
9.6905 1
* Riyadh
6.1458 1
* Nottingham
11.3214 1
* Athens
5.8182 1
* Istanbul
6.5469 1
* Melbourne
7.8500 1
end

* Etiquetas (opcional)
label define tto 0 "Sin castigo" 1 "Con castigo"
label values tratamiento tto

* Verificación rápida
tab tratamiento
summarize contrib, detail

* t-test de medias independientes (Periodo 1)
ttest contrib, by(tratamiento)

* Nota orientativa para tu informe:
* Si el p-valor > 0.05  -> no hay diferencia significativa inicial.
* Si el p-valor <= 0.05 -> sí hay diferencia significativa inicial.

****************************************************
* P2.3.3 – t-test Periodo 10 (con vs sin castigo)
****************************************************

clear all
set more off

* Datos del Periodo 10
input contrib tratamiento
* --- SIN CASTIGO ---
5.2941 0   // Copenhagen
8.6818 0   // Dnipropetrovs'k
6.9412 0   // Minsk
2.9792 0   // St. Gallen
7.5192 0   // Muscat
5.5592 0   // Samara
3.7188 0   // Zurich
2.9464 0   // Boston
4.0000 0   // Bonn
2.4000 0   // Chengdu
3.8095 0   // Seoul
5.8750 0   // Riyadh
2.3929 0   // Nottingham
5.3636 0   // Athens
1.3594 0   // Istanbul
1.3000 0   // Melbourne

* --- CON CASTIGO ---
17.0147 1   // Copenhagen
10.0682 1   // Dnipropetrovs'k
11.7059 1   // Minsk
15.1563 1   // St. Gallen
9.0962 1    // Muscat
11.5724 1   // Samara
16.4565 1   // Zurich
16.8393 1   // Boston
14.6833 1   // Bonn
14.8125 1   // Chengdu
17.5119 1   // Seoul
6.6250 1    // Riyadh
14.6964 1   // Nottingham
6.2045 1    // Athens
7.6250 1    // Istanbul
15.8500 1   // Melbourne
end

* t-test
ttest contrib, by(tratamiento)


